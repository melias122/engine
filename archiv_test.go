package psl

import (
	"encoding/csv"
	"fmt"
	"os"
	"testing"
)

var C = [][]int{
	{2, 7, 13, 32, 35},
	{1, 14, 15, 17, 19},
	{4, 9, 10, 25, 27},
	{1, 2, 13, 21, 31},
	{17, 21, 29, 32, 34},
	{14, 16, 23, 30, 34},
	{1, 3, 6, 16, 26},
	{3, 6, 7, 23, 24},
	{11, 16, 23, 30, 31},
	{8, 12, 20, 22, 25},
	{6, 18, 29, 32, 35},
	{4, 15, 17, 20, 23},
	{7, 9, 13, 16, 24},
	{1, 26, 27, 28, 30},
	{8, 10, 23, 33, 34},
	{2, 5, 6, 18, 27},
	{17, 25, 27, 31, 32},
	{24, 27, 29, 31, 33},
	{2, 17, 19, 30, 32},
	{15, 17, 19, 28, 34},
}

var Out = [][]string{
	{"Poradové číslo", "Kombinacie", "P", "N", "PR", "Mc", "Vc", "c1-c9", "C0", "cC", "Cc", "CC", "ZH", "Sm", "ΔSm", "Kk", "ΔKk", "N-tice", "X-tice", "ƩR1-DO", "ΔƩR1-DO"},
	{"1", "2 7 13 32 35", "2", "3", "3", "4", "1", "2", "0", "2", "1", "0", "0", "1,0539215686", "0", "0", "0", "5 0 0 0 0", "2 1 0 2", "0", "0"},
	{"2", "1 14 15 17 19", "1", "4", "2", "3", "2", "1", "0", "4", "0", "0", "0", "0,4705882353", "-0,5833333333", "0,3413729959", "0,3413729959", "3 1 0 0 0", "1 4 0 0", "0", "0"},
	{"3", "4 9 10 25 27", "2", "3", "0", "2", "3", "2", "1", "2", "0", "0", "0", "0,7205882353", "0,25", "0,7481080321", "0,4067350362", "3 1 0 0 0", "3 0 2 0", "0", "0"},
	{"4", "1 2 13 21 31", "1", "4", "3", "5", "0", "2", "0", "1", "2", "0", "0", "0,9215686275", "0,2009803922", "0,8490682562", "0,1009602241", "3 1 0 0 0", "2 1 1 1", "6,4688632051061E-005", "6,4688632051061E-005"},
	{"5", "17 21 29 32 34", "2", "3", "2", "3", "2", "0", "0", "3", "2", "0", "1", "0,5245098039", "-0,3970588235", "0,1819733462", "-0,6670949101", "5 0 0 0 0", "0 1 2 2", "6,4688632051061E-005", "0"},
	{"6", "14 16 23 30 34", "4", "1", "1", "3", "2", "0", "1", "4", "0", "0", "1", "0,6274509804", "0,1029411765", "0,8760900376", "0,6941166914", "5 0 0 0 0", "0 2 2 1", "4,3125754700707E-005", "-2,1562877350354E-005"},
	{"7", "1 3 6 16 26", "3", "2", "1", "2", "3", "3", "0", "2", "0", "0", "1", "0,7401960784", "0,112745098", "0,2568959681", "-0,6191940696", "5 0 0 0 0", "3 1 1 0", "6,4688632051061E-005", "2,1562877350354E-005"},
	{"8", "3 6 7 23 24", "2", "3", "3", "3", "2", "3", "0", "2", "0", "0", "2", "0,681372549", "-0,0588235294", "0,8625831505", "0,6056871824", "1 2 0 0 0", "3 0 2 0", "8,6251509401415E-005", "2,1562877350354E-005"},
	{"9", "11 16 23 30 31", "2", "3", "3", "3", "2", "0", "1", "2", "1", "1", "1", "0,6274509804", "-0,0539215686", "0,4077419153", "-0,4548412352", "3 1 0 0 0", "0 2 2 1", "0,0001293773", "4,3125754700707E-005"},
	{"10", "8 12 20 22 25", "4", "1", "0", "3", "2", "1", "1", "2", "0", "1", "0", "0,5147058824", "-0,112745098", "0,7978997115", "0,3901577962", "5 0 0 0 0", "1 2 2 0", "2,1562877350354E-005", "-0,0001078144"},
	{"11", "6 18 29 32 35", "3", "2", "1", "2", "3", "1", "0", "3", "1", "0", "0", "0,8480392157", "0,3333333333", "0,6046600345", "-0,193239677", "5 0 0 0 0", "1 1 1 2", "0,0001293773", "0,0001078144"},
	{"12", "4 15 17 20 23", "2", "3", "2", "3", "2", "1", "1", "3", "0", "0", "0", "0,5147058824", "-0,3333333333", "0,4656193293", "-0,1390407052", "5 0 0 0 0", "1 3 1 0", "0,000172503", "4,3125754700707E-005"},
	{"13", "7 9 13 16 24", "2", "3", "2", "2", "3", "2", "0", "3", "0", "0", "0", "0,4852941176", "-0,0294117647", "0,8798639521", "0,4142446227", "5 0 0 0 0", "2 2 1 0", "0,0001940659", "2,1562877350354E-005"},
	{"14", "1 26 27 28 30", "3", "2", "0", "1", "4", "1", "1", "3", "0", "0", "0", "0,7303921569", "0,2450980392", "0,3016134162", "-0,5782505359", "2 0 1 0 0", "1 0 4 0", "0,0001509401", "-4,3125754700707E-005"},
	{"15", "8 10 23 33 34", "3", "2", "1", "3", "2", "1", "1", "2", "0", "1", "0", "0,862745098", "0,1323529412", "0,4462179614", "0,1446045452", "3 1 0 0 0", "2 0 1 2", "0,000172503", "2,1562877350354E-005"},
	{"16", "2 5 6 18 27", "3", "2", "2", "2", "3", "3", "0", "2", "0", "0", "0", "0,7401960784", "-0,1225490196", "0,3109715442", "-0,1352464172", "3 1 0 0 0", "3 1 1 0", "0,000172503", "0"},
	{"17", "17 25 27 31 32", "1", "4", "2", "3", "2", "0", "0", "3", "2", "0", "1", "0,4264705882", "-0,3137254902", "0,1106191027", "-0,2003524415", "3 1 0 0 0", "0 1 2 2", "0,0002803174", "0,0001078144"},
	{"18", "24 27 29 31 33", "1", "4", "2", "3", "2", "0", "0", "3", "1", "1", "2", "0,2598039216", "-0,1666666667", "0,8646747612", "0,7540556585", "5 0 0 0 0", "0 0 3 2", "0,0002587545", "-2,1562877350354E-005"},
	{"19", "2 17 19 30 32", "3", "2", "3", "2", "3", "1", "1", "2", "1", "0", "0", "0,862745098", "0,6029411765", "0,1964098541", "-0,6682649071", "5 0 0 0 0", "1 2 1 1", "0,0003234432", "6,4688632051061E-005"},
	{"20", "15 17 19 28 34", "2", "3", "2", "2", "3", "0", "0", "5", "0", "0", "2", "0,5735294118", "-0,2892156863", "0,6006425131", "0,404232659", "5 0 0 0 0", "0 3 1 1", "0,0002803174", "-4,3125754700707E-005"},
}

func TestWrite(t *testing.T) {
	ar := New(5, 35)
	if err := ar.write(C); err != nil {
		t.Fatalf("Write error: %s", err.Error())
	}
	f, err := os.Open("535/Archiv_535.csv")
	if err != nil {
		t.Fatalf("Open error: %s", err.Error())
	}
	defer f.Close()
	r := csv.NewReader(f)
	r.Comma = ';'
	records, err := r.ReadAll()
	if err != nil {
		t.Fatalf("Read error: %s", err.Error())
	}
	for i, line := range Out {
		for j, l := range line {
			a := fmt.Sprintf("%s", records[i][j])
			b := fmt.Sprintf("%s", l)
			if a != b {
				t.Errorf("Excepted: (%s), Have: (%s)", b, a)
			}
		}
	}
	f.Close()
	os.RemoveAll("535")
}
